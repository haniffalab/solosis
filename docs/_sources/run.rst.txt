.. _run:

Running
=======

The pipeline offers a workflow that processes files and figures from the generated files.
These figures can be accessed via the ``html output page`` generated by the pipeline. 

Each of the workflows work as entry points that can be specified when running the
pipeline through the command line.

**Useful flags for Nextflow execution:**
- The ``-c`` Flag directs Nextflow to the configuration file ``nextflow.config``.
- The ``-params`` Flag directs Nextflow to the parameters  file ``params.yaml``. 
- The ``-resume`` Flag directs Nextflow to continue the pipeline from the cached point.
- The ``-profile`` Flag directs Nextflow to define which profile to be used (e.g. Docker profile).
- The ``-entry`` Flag directs Nextflow to define which workflow you wish to utilise.

Configurations and data are input through a :ref:`parameters yaml file <parameters_file>`.

To run the pipeline use

.. code-block:: shell

   nextflow run main.nf -params params.yaml -c nextflow.config

``-params`` will handle all input files, output files, and output directories.
defined. ``-c`` will handle the available profiles to use, i.e. Conda, Docker, Singularity.

To view a log of the pipeline use
.. code-block:: shell

   nextflow log modest_mcclintock -t template.html > provenance.html

***************
Modification of the pipeline entry point
***************
You can modify the entry point by using the ``-entry`` flag when executing the pipeline. 
**The following workflows are available for this pipeline:**
- ``-entry adata_generation`` Allows users to only generate adata objects from the raw data/metadata provided, allowing for manual further analysis.
- ``-entry quick_qc`` Allows users to run raw data through a quick qc process excluding ``scrublet`` and ``scanpy``.
- ``-entry cellranger`` Allows users to use alternative tools  rather than the default (SOUPX) **This does not exist yet though** 

**TO USE DEFAULT PIPELINE-  DO NOT USE ``-entry`` FLAG.**

Running using Docker 
-------------------

The default pipeline will not run on local executor without any type of environment creation. 

However, if you are working on a compute cluster you will need to make sure the Docker image is avaiable and active in your worker nodes. To run the pipeline using a new Docker image use the ``-profile Docker`` option:

.. code-block:: shell

   nextflow run main.nf \
            -params-file /path/to/params.yaml \
            -c nextflow.config \
            -profile docker

Creating the docker image when the pipleine is launched may take a few minutes.

Further reading
---------------

For more information about Docker image pulling/local conda env creation in Nextflow please refer to Nextflow's official docs for `containers <https://www.nextflow.io/docs/latest/container.html>`__ and `conda <https://www.nextflow.io/docs/latest/conda.html>`__.